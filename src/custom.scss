@import "../node_modules/bootstrap/scss/functions";







$font-family-base: "Barlow", "Barlow_condensed", "Bellefair";

$blue-900-alt: rgb(11, 13, 23);
$blue-300-alt: rgb(208, 214, 249);



$h1-font-size: 144px;
$h2-font-size: 96px;
$h3-font-size: 80px;
$h4-font-size: 56px;
$h5-font-size: 40px;
$h6-font-size: 32px;
$h7-font-size: 28px;
$h8-font-size: 24px;
$h9-font-size: 20px;
$h10-font-size: 18px;
$h11-font-size: 16px;
$h12-font-size: 15px;
$h13-font-size: 14px;  

// $font-size-base: 0.5rem;
$enable-rfs: false;
@import "../node_modules/bootstrap/scss/variables";
@import "../node_modules/bootstrap/scss/variables-dark";

$theme-colors: (
  "primary": $primary,
  "secondary": $secondary,
  "success": $success,
  "info": $info,
  "warning": $warning,
  "danger": $danger,
  "light": $light,
  "dark": $dark,
  "blue-300-alt": $blue-300-alt,
  "blue-900-alt": $blue-900-alt
);

$font-sizes: (
  1: $h1-font-size,
  2: $h2-font-size,
  3: $h3-font-size,
  4: $h4-font-size,
  5: $h5-font-size,
  6: $h6-font-size,
  7: $h7-font-size,
  8: $h8-font-size,
  9: $h9-font-size,
  10: $h10-font-size,
  11: $h11-font-size,
  12: $h12-font-size,
  13: $h13-font-size
);

@import "../node_modules/bootstrap/scss/maps";
@import "../node_modules/bootstrap/scss/mixins";
@import "../node_modules/bootstrap/scss/root";




$utilities: (
  "color": (property: color,
    class: text,
    local-vars: ("text-opacity": 1),
    values: map-merge($utilities-text-colors,
      ("lila": #D0D6F9))),

  "background-color": (property: background-color,
    class: bg,
    local-vars: ("bg-opacity": 1),
    state: hover,
    values: map-merge($utilities-bg-colors,
      ("espacio" : #000000,
        "navbar": rgba(0, 0, 0, 0.3)))),
  "border-color": (property: border-color,
    class: border,
    local-vars: ("border-opacity": 1),
    values: map-merge($utilities-border-colors, (transparent: transparent))),

  "border-bottom": (property: border-bottom,
    responsive: true,
    state: hover,
    values: (null: var(--#{$prefix}border-width) var(--#{$prefix}border-style) var(--#{$prefix}border-color),
      0: 0,
      nav: var(--#{$prefix}border-width) var(--#{$prefix}border-style) var(--#{$prefix}gray-500))),
  "border": (property: border,
    responsive: true,
    state: hover,
    values: (null: var(--#{$prefix}border-width) var(--#{$prefix}border-style) var(--#{$prefix}border-color),
      0: 0,
    )),
  "translate-linea": (property: transform,
    class: translate-linea,
    values: (null: translate(-90%, -50%),
      x: translateX(-50%),
      y: translateY(-50%),
    )),
  "letter-spacing": (property: letter-spacing,
    class: espacio-entre-letras,
    responsive: true,
    values: (punto-1: 0.1rem,
      punto-15: 0.15rem,
      punto-17: 0.17rem,
      punto-185: 0.185rem,
      punto-2: 0.2rem,
      punto-25: 0.25rem,
      punto-3: 0.3rem,
      punto-4: 0.4rem,
      punto-5: 0.5rem))
);


@import "../node_modules/bootstrap/scss/utilities";

$utilities: map-merge($utilities,
    ("width": map-merge(map-get($utilities, "width"),
        (values: map-merge(map-get(map-get($utilities, "width"), "values"),
            (3: 3%,
              5: 5%,
              27: 27%,
              30: 30%,
              34: 34%,
              38: 38%,
              40: 40%,
              45: 45%,
              50: 50%,
              55: 55%,
              60: 60%,
              75: 75%,
              80: 80%,
              82: 82%,
              90: 90%,
              91: 91%,
              105: 105%),
          ),
        ),
      ),
    ));

$utilities: map-merge($utilities,
    ("width": map-merge(map-get($utilities, "width"),
        (responsive: true),
      ),
    ));

$utilities: map-merge($utilities,
    ("height": map-merge(map-get($utilities, "height"),
        (values: map-merge(map-get(map-get($utilities, "height"), "values"),
            (5: 5%,
              25:25%,
              40: 40%,
              55: 55%,
              60: 60%,
              70: 70%,
              73: 73%,
              77: 77%,
              80: 80%,
              87: 87%,
              100: 100%,
              200: 200%,
              250: 250%,
              300: 300%,
            ),
          ),
        ),
      ),
    ));

$utilities: map-merge($utilities,
    ("height": map-merge(map-get($utilities, "height"),
        (responsive: true),
      ),
    ));

$utilities: map-merge($utilities,
    ("viewport-height": map-merge(map-get($utilities, "viewport-height"),
        (values: map-merge(map-get(map-get($utilities, "viewport-height"), "values"),
            ( "none": "auto",
              7: 7vh,
              8: 8vh,
              10: 10vh,
              15: 15vh,
              30:30vh,
              40: 40vh,
              50: 50vh,
              55: 55vh,
              60: 60vh,
              110: 110vh),
          ),
        ),
      ),
    ));

$utilities: map-merge($utilities,
    ("viewport-height": map-merge(map-get($utilities, "viewport-height"),
        (responsive: true),
      ),
    ));

$utilities: map-merge($utilities,
    ("viewport-width": map-merge(map-get($utilities, "viewport-width"),
        (values: map-merge(map-get(map-get($utilities, "viewport-width"), "values"),
            (40: 40vw,
              50: 50vw,
              80: 80vw,
              110: 110vw),
          ),
        ),
      ),
    ));

$utilities: map-merge($utilities,
    ("viewport-width": map-merge(map-get($utilities, "viewport-width"),
        (responsive: true),
      ),
    ));

$utilities: map-merge($utilities,
    ("font-size": map-merge(map-get($utilities, "font-size"),
        (responsive: true),
      ),
    ));

    $utilities: map-merge($utilities,
    ("line-height": map-merge(map-get($utilities, "line-height"),
        (values: map-merge(map-get(map-get($utilities, "line-height"), "values"),
            (
              18: 1.8
            ),
          ),
        ),
      ),
    ));

    $utilities: map-merge($utilities,
    ("start": map-merge(map-get($utilities, "start"),
        (values: map-merge(map-get(map-get($utilities, "start"), "values"),
            (
              16: 16%,
              18: 18%
            ),
          ),
        ),
      ),
    ));



@import "../node_modules/bootstrap/scss/utilities/api";

@import "../node_modules/bootstrap/scss/nav";
@import "../node_modules/bootstrap/scss/navbar";
@import "../node_modules/bootstrap/scss/grid";
// @import "../node_modules/bootstrap/scss/images";
// @import "../node_modules/bootstrap/scss/modal";
@import "../node_modules/bootstrap/scss/close";
@import "../node_modules/bootstrap/scss/containers";
@import "../node_modules/bootstrap/scss/offcanvas";
@import "../node_modules/bootstrap/scss/reboot";
// @import "../node_modules/bootstrap/scss/type";

html,
body {
  scrollbar-width: none;
}

body {
  min-height: 100vh !important;
  width: 100vw !important;

}

#root {
  min-height: 100vh !important;
  width: 100vw !important;
}


.explorer-shadow:hover {
  -webkit-box-shadow: 0px 0px 0px 55px rgba(255, 255, 255, 0.099);
  -moz-box-shadow: 0px 0px 0px 55px rgba(255, 255, 255, 0.099);
  box-shadow:  0px 0px 0px 55px rgba(255, 255, 255, 0.099);
}


.efectoEsmeril {
  background-color: rgba(255, 255, 255, 0.04);
  backdrop-filter: blur(41px);
  height: max-content;
}

.navbar-brand>a>img {
  width: calc(6vh);
}

button>img {
  width: calc(4vh);
}

.navbar-toggler {
  border: none !important;
}

.estadoHover:hover>div:last-of-type {
  background: $gray-600;
}

// .nav-link > div:hover > div:last-of-type {
//   background: $gray-600;
// } 

#imagenExplorer {
  width: 144px !important;
}

#circlesCrew >a >div {
width: 10px;
height: 10px;
}

@include media-breakpoint-up(sm) {


  nav {
    height: 15vh !important;
  }

  .navbar-brand>a>img {
    width: calc(7vh);
  }

  .navbar-brand {
    width: 20vw;
  }

  // .fs-2 {
  //   font-size: calc(1.68rem + 0.1vw) !important;
  // }

  // .fs-3 {
  //   font-size: calc(0.5rem + 1vw) !important;
  // }

  // .fs-4 {
  //   font-size: calc(0.6rem + 1vw) !important;
  // }

  .display-1 {
    font-size: calc(6.5rem + 5vw);
    font-weight: 300;
    line-height: 1.2;
  }


  section::-webkit-scrollbar {
    -webkit-appearance: none;

  }

  section::-webkit-scrollbar:vertical {
    width: 10px;

  }

  section::-webkit-scrollbar-button:increment,
  body::-webkit-scrollbar-button {
    display: none;
  }

  #imagenExplorer {
    width: 272px !important;
  }

}


@include media-breakpoint-up(lg) {

  nav {
    height: 22vh !important;
    align-items: end;
  }

  .navbar {
    align-items: flex-end;
  }

  .navbar-brand>a>img {
    width: calc(7vh);
  }

  .navbar-brand {
    width: 20vw;
  }

  // .fs-1 {
  //   font-size: calc(0.5rem + 1vw) !important;
  // }

  // .fs-2 {
  //   font-size: calc(1.0rem + 1vw) !important;
  // }

  // .fs-3 {
  //   font-size: calc(0.3rem + 1vw) !important;
  // }

  // .fs-4 {
  //   font-size: calc(0.6rem + 1vw) !important;
  // }

// $shadow-explorer:  0px 0px 0px 85px rgba(255, 255, 255, 0.099);

.explorer-shadow:hover {
  -webkit-box-shadow: 0px 0px 0px 85px rgba(255, 255, 255, 0.099);
  -moz-box-shadow: 0px 0px 0px 85px rgba(255, 255, 255, 0.099);
  box-shadow:  0px 0px 0px 85px rgba(255, 255, 255, 0.099);
}

#circlesCrew >a >div {
width: 15px;
height: 15px;
}

}

.letra-bellefair {
  font-family: "Bellefair", serif;
  font-weight: 400;
}

.tamanio-titulo {
  font-size: 85px;
}

.offcanvas-vidrio-esmerilado {
  background-color: rgba(244, 244, 244, 0.049);
  backdrop-filter: blur(35px);
}


.offcanvas-backdrop.show {
  opacity: 0;
}


.barlow-condensed {
  font-family: "Barlow_condensed";
}

.barlow {
  font-family: "Barlow";
}

.sombre_boton_explorer {
  -webkit-box-shadow: 0px 0px 0px 10px rgba(255, 255, 255, 0.5);
  -moz-box-shadow: 0px 0px 0px 10px rgba(255, 255, 255, 0.5);
  box-shadow: 0px 0px 0px 10px rgba(255, 255, 255, 0.5);
}






button:focus:not(:focus-visible) {
  border: none !important;
  box-shadow: none;

}



// @import "../node_modules/bootstrap/scss/functions";

// $font-family-sans-serif: 'Barlow', sans-serif;
// $font-family-base:  'Barlow', sans-serif;
// $font-family-bellefair: 'Bellefair', sans-serif;

// @import "../node_modules/bootstrap/scss/variables";



// @import "../node_modules/bootstrap/scss/maps";
// @import "../node_modules/bootstrap/scss/mixins";
// @import "../node_modules/bootstrap/scss/root";


// body {
//   margin: 0;
//   -webkit-font-smoothing: antialiased;
//   -moz-osx-font-smoothing: grayscale;
//   height: 100%;
// }

// .padding-parte-arriba-main {
//   padding-top: 90px;
// }

// .letra-bellefair {
//   font-family: "Bellefair", serif;
// }



// .home {
//   height: 100vh;
// }

// .circulo-portada {
//   height: 170px;
//   width: 170px;
//   border-radius: 50%;
// }

// .letra-gris-oscura {
//   color: #ffffff;
//   opacity: 0.5;
// }



// .fondo {
//   background-color: black;
//   height: 705px;
// }

// .fondos_de_las_paginas {
//   height: 100%;
// }



// .tamanio_titulos_destinos {
//   font-size: calc(3.1rem + 1.5vw) !important;
// }


// .color_letra_gris_clara {
//   color: #D0D6F9;
// }

// .color_borde_destinos {
//   border-color: #383B4B !important;
// }



// @import "../node_modules/bootstrap/scss/bootstrap.scss";
@font-face {
  font-family: "Bellefair";
  src: url('/public/fuentes/Bellefair/Bellefair-Regular.ttf') format('truetype');
  font-weight: 400;
  font-style: normal;

}

@font-face {
  font-family: "Barlow";
  src: url('/public/fuentes/Barlow/Barlow-Regular.ttf') format('truetype');
  font-weight: 400;
  font-style: normal;

}

@font-face {
  font-family: "Barlow_condensed";
  src: url('/public/fuentes/BarlowCondensed/BarlowCondensed-Regular.ttf') format('truetype');
  font-weight: 400;
  font-style: normal;

}